{"version":3,"sources":["webpack://frontend/./src/components/Alerts.js","webpack://frontend/./src/components/Dashboard.js"],"names":["Alerts","state","showAlert","timeout","getReactAlerts","array","map","e","index","variant","type","message","delay","wait","Promise","resolve","reject","setTimeout","props","then","res","setState","messages","prevProps","prevState","prevMessages","length","Component","Dashboard","uploadFile","clearDB","websocket","ws","status","downloadFormat","downloadUrl","uploadUrl","getDownloadUrl","setWebsocketStatus","checkWebsocket","readyState","WebSocket","CLOSED","connectWebsocket","self","connectInterval","ws_scheme","window","location","protocol","url","host","onopen","clearTimeout","onmessage","evt","data","JSON","parse","onclose","Math","min","onerror","console","log","selectFormat","target","value","selectFileToUpload","input","document","createElement","onchange","file","files","click","sendFile","reader","FileReader","readAsText","onload","readerEvent","content","result","send","stringify","cleardb","name"],"mappings":"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","file":"src_components_Dashboard_js.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert as ReactAlert } from \"react-bootstrap\";\n\nexport default class Alerts extends Component {\n  state = {\n    showAlert: false,\n    timeout: 5000,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let showAlert = false;\n    const { messages } = this.props;\n    const { messages: prevMessages } = prevProps;\n    // console.log(\"messages\", messages);\n    // console.log(\"errors\", errors);\n    // console.log(\"prevMessages\", prevMessages);\n    // console.log(\"prevErrors\", prevErrors);\n\n    if (messages && messages.length > 0 && messages !== prevMessages) {\n      showAlert = true;\n    }\n    // console.log(\"Alerts componentDidUpdate showAlert\", showAlert);\n    // console.log(\n    //   \"Alerts componentDidUpdate prevSate.showAlert\",\n    //   prevState.showAlert\n    // );\n    // console.log(\n    //   \"Alerts componentDidUpdate this.state.showAlert\",\n    //   this.state.showAlert\n    // );\n    if (showAlert && !this.state.showAlert) {\n      this.setState({\n        showAlert,\n      });\n    }\n  }\n\n  getReactAlerts = (array) => {\n    return array ? (\n      array.map((e, index) => {\n        const variant = e.type === \"success\" ? \"primary\" : \"danger\";\n        return (\n          <ReactAlert variant={variant} key={index}>\n            {e.message}\n          </ReactAlert>\n        );\n      })\n    ) : (\n      <></>\n    );\n  };\n\n  delay = (wait) =>\n    new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), wait);\n    });\n\n  showAlert = () => {\n    if (this.state.showAlert) {\n      this.delay(\n        this.props.timeout ? this.props.timeout : this.state.timeout\n      ).then((res) =>\n        this.setState({\n          showAlert: false,\n        })\n      );\n      return <>{this.getReactAlerts(this.props.messages)}</>;\n    }\n    return <div />;\n  };\n\n  render() {\n    return <>{this.showAlert()}</>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Card } from \"react-bootstrap\";\nimport Alerts from \"./Alerts\";\n\nexport default class Dashboard extends Component {\n  state = {\n    messages: [],\n    uploadFile: null,\n    clearDB: false,\n    websocket: {\n      ws: null,\n      status: \"disconnected\",\n    },\n    downloadFormat: \"json\",\n  };\n\n  downloadUrl = \"/testforjob/api/download/\";\n  uploadUrl = \"/testforjob/ws/upload/\";\n\n  getDownloadUrl = () => {\n    return `/testforjob/api/download_${this.state.downloadFormat}/`;\n  };\n\n  setWebsocketStatus = (status) => {\n    const websocket = { ...this.state.websocket, status: status };\n    //console.log(\"setWebsocketStatus\", websocket);\n    this.setState({ websocket });\n  };\n\n  checkWebsocket = () => {\n    const ws = this.state.websocket.ws;\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connectWebsocket(); //check if websocket instance is closed, if so call `connect` function.\n  };\n\n  connectWebsocket = () => {\n    const self = this; // cache the this\n    let connectInterval;\n    const ws_scheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const url = `${ws_scheme}://${window.location.host}${this.uploadUrl}`;\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      self.timeout = 250; // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval);\n      //console.log(`connected to ${url}`);\n      this.setWebsocketStatus(`connected to ${url}`);\n    };\n\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const data = JSON.parse(evt.data);\n      this.setState({\n        messages: data ? [data] : [],\n      });\n    };\n\n    ws.onclose = () => {\n      //console.log('disconnected');\n      this.setWebsocketStatus(\"disconnected\");\n      // automatically try to reconnect on connection loss\n      self.timeout = self.timeout + self.timeout; //increment retry interval\n      connectInterval = setTimeout(\n        this.checkWebsocket,\n        Math.min(10000, self.timeout)\n      ); //call check function after timeout\n    };\n\n    ws.onerror = (e) => {\n      console.log(\"websocket error\", e);\n      this.setWebsocketStatus(`websocket error: ${e}`);\n    };\n    //console.log('Dashboard componentDidMount', ws);\n    const websocket = { ...this.state.websocket, ws: ws };\n    //console.log('set ws', websocket);\n    this.setState({ websocket });\n  };\n\n  componentDidMount() {\n    this.connectWebsocket();\n  }\n\n  selectFormat = (e) => {\n    //console.log('selectFormat', e.target.value);\n    this.setState({ downloadFormat: e.target.value });\n  };\n\n  selectFileToUpload = (e) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      //console.log('selectFileToUpload', file);\n      this.setState({ uploadFile: file });\n    };\n\n    input.click();\n  };\n\n  sendFile = (e) => {\n    const reader = new FileReader();\n    reader.readAsText(this.state.uploadFile, \"UTF-8\");\n\n    // here we tell the reader what to do when it's done reading...\n    reader.onload = (readerEvent) => {\n      const content = readerEvent.target.result; // this is the content!\n      //console.log(content);\n      this.state.websocket.ws.send(\n        JSON.stringify({ cleardb: this.state.clearDB, content: content })\n      );\n    };\n  };\n\n  clearDB = () => {\n    const clearDB = !this.state.clearDB;\n    //console.log('clearDB', clearDB);\n    this.setState({ clearDB });\n  };\n\n  render() {\n    return (\n      <div>\n        <Alerts messages={this.state.messages} />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Загрузка в DB</Form.Label>\n            <div className=\"col-12 text-left\">\n              Websocket status: {this.state.websocket.status}\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Form.Label className=\"col-2 text-left\">Очистить DB</Form.Label>\n              <Form.Check\n                name=\"clearBD\"\n                value={this.state.clearDB}\n                onChange={this.clearDB}\n                className=\"ml-2\"\n              />\n            </Row>\n            <Row>\n              <Form.Label className=\"col-2 text-left\">\n                Файл загрузки в DB\n              </Form.Label>\n              <input\n                className=\"form-control col-3\"\n                name=\"uploadFileName\"\n                id=\"uploadFileName\"\n                type=\"text\"\n                value={this.state.uploadFile ? this.state.uploadFile.name : \"\"}\n                //onChange={this.change}\n                readOnly\n              />\n              <Button\n                variant=\"primary\"\n                className=\"\"\n                onClick={this.selectFileToUpload}\n              >\n                ...\n              </Button>\n              <Button\n                variant=\"primary\"\n                className=\"col-1 ml-2\"\n                onClick={this.sendFile}\n                disabled={this.state.uploadFile ? \"\" : \"disabled\"}\n              >\n                Старт\n              </Button>\n            </Row>\n          </Card.Body>\n        </Card>\n        <hr />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Выгрузка DB</Form.Label>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Form.Label className=\"col-3 text-left\">\n                Выберите формат сохраняемого файла\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                className=\"col-2\"\n                onChange={this.selectFormat}\n              >\n                <option value=\"json\">json</option>\n                <option value=\"csv\">csv</option>\n                <option value=\"text\">text/plain</option>\n              </Form.Control>\n              <form action={this.getDownloadUrl()} method=\"post\">\n                <Button variant=\"primary\" type=\"submit\" className=\"col ml-4\">\n                  Старт\n                </Button>\n              </form>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}