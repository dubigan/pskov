{"version":3,"sources":["webpack://frontend/./src/components/Dashboard.js"],"names":["Dashboard","state","uploadFile","websocket","ws","status","downloadFormat","downloadUrl","uploadUrl","getDownloadUrl","connectWebsocket","ws_scheme","window","location","protocol","url","host","WebSocket","onopen","console","log","setState","onmessage","evt","message","JSON","parse","data","onclose","onerror","e","setSate","selectFormat","target","value","selectFileToUpload","input","document","createElement","type","onchange","file","files","click","sendFile","reader","FileReader","readAsText","onload","readerEvent","content","result","send","name","Component"],"mappings":"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","file":"src_components_Dashboard_js.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Row, Card } from 'react-bootstrap';\n\nexport default class Dashboard extends Component {\n  state = {\n    uploadFile: null,\n    websocket: {\n      ws: null,\n      status: 'disconnected',\n    },\n    downloadFormat: 'json',\n  };\n\n  downloadUrl = '/testforjob/api/download/';\n  uploadUrl = '/testforjob/ws/upload/';\n\n  getDownloadUrl = () => {\n    return `/testforjob/api/download_${this.state.downloadFormat}/`;\n  };\n\n  connectWebsocket = () => {\n    const ws_scheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n    const url = `${ws_scheme}://${window.location.host}${this.uploadUrl}`;\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log(`connected to ${url}`);\n      const websocket = { ...this.state.websocket, status: `connected to ${url}` };\n      console.log('onopen', websocket);\n      this.setState({ websocket });\n    };\n\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data);\n      //this.setState({dataFromServer: message})\n      console.log(message);\n    };\n\n    ws.onclose = () => {\n      console.log('disconnected');\n      this.setState({ ...this.state.websocket, status: 'disconnected' });\n      // automatically try to reconnect on connection loss\n    };\n\n    ws.onerror = (e) => {\n      console.log('websocket error', e);\n      this.setSate({ ...this.state.websocket, status: `websocket error: ${e}` });\n    };\n    //console.log('Dashboard componentDidMount', ws);\n    const websocket = { ...this.state.websocket, ws: ws };\n    //console.log('set ws', websocket);\n    this.setState({ websocket });\n  };\n\n  componentDidMount() {\n    this.connectWebsocket();\n  }\n\n  selectFormat = (e) => {\n    //console.log('selectFormat', e.target.value);\n    this.setState({ downloadFormat: e.target.value });\n  };\n\n  selectFileToUpload = (e) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      //console.log('selectFileToUpload', file);\n      this.setState({ uploadFile: file });\n    };\n\n    input.click();\n  };\n\n  sendFile = (e) => {\n    const reader = new FileReader();\n    reader.readAsText(this.state.uploadFile, 'UTF-8');\n\n    // here we tell the reader what to do when it's done reading...\n    reader.onload = (readerEvent) => {\n      const content = readerEvent.target.result; // this is the content!\n      console.log(content);\n      this.state.websocket.ws.send(content);\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"col-12\">Websocket status: {this.state.websocket.status}</div>\n        <Form.Label className=\"col-5\">Файл загрузки в BD</Form.Label>\n        <Row md=\"auto\">\n          <input\n            className=\"form-control col-6 ml-4\"\n            name=\"uploadFileName\"\n            id=\"uploadFileName\"\n            type=\"text\"\n            value={this.state.uploadFile ? this.state.uploadFile.name : ''}\n            //onChange={this.change}\n            readOnly\n          />\n          <Button variant=\"primary\" className=\"\" onClick={this.selectFileToUpload}>\n            ...\n          </Button>\n          <Button\n            variant=\"primary\"\n            className=\"col-1 ml-4\"\n            onClick={this.sendFile}\n            disabled={this.state.uploadFile ? '' : 'disabled'}\n          >\n            Старт\n          </Button>\n        </Row>\n        <hr />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Выгрузка BD</Form.Label>\n          </Card.Header>\n          <Row>\n            <Form.Label className=\"col-3 ml-4\">Выберите формат сохраняемого файла</Form.Label>\n            <Form.Control as=\"select\" className=\"col-2\" onChange={this.selectFormat}>\n              <option value=\"json\">json</option>\n              <option value=\"csv\">csv</option>\n              <option value=\"text\">text/plain</option>\n            </Form.Control>\n            <form action={this.getDownloadUrl()} method=\"post\">\n              <Button variant=\"primary\" type=\"submit\" className=\"col ml-4\">\n                Старт\n              </Button>\n            </form>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}