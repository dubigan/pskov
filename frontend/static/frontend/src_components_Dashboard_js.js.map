{"version":3,"sources":["webpack://frontend/./src/components/Dashboard.js"],"names":["Dashboard","state","uploadFileName","downloadFormat","downloadUrl","getDownloadUrl","change","e","selectFormat","setState","target","value","selectFile","downloadFileName","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;IAEqBA,S;;;;;;;;;;;;;;oHACnBC,K,GAAQ;AACNC,oBAAc,EAAE,EADV;AAENC,oBAAc,EAAE;AAFV,K,QAKRC,W,GAAc,2B,QACdC,c,GAAiB,YAAM;AACrB,aAAO,8BAA8B,MAAKJ,KAAL,CAAWE,cAAzC,GAA0D,GAAjE;AACD,K,QAEDG,M,GAAS,UAACC,CAAD,EAAO,CAAE,C,QAElBC,Y,GAAe,UAACD,CAAD,EAAO;AACpB;AACA,YAAKE,QAAL,CAAc;AAAEN,sBAAc,EAAEI,CAAC,CAACG,MAAF,CAASC;AAA3B,OAAd;AACD,K;;;;;6BAEQ;AACP,0BACE,2EACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+FADF,eAEE,iDAAC,oDAAD;AAAK,UAAE,EAAC;AAAR,sBACE;AACE,iBAAS,EAAC,yBADZ;AAEE,YAAI,EAAC,gBAFP;AAGE,UAAE,EAAC,gBAHL;AAIE,YAAI,EAAC,MAJP;AAKE,aAAK,EAAE,KAAKV,KAAL,CAAWC,cALpB;AAME,gBAAQ,EAAE,KAAKI;AANjB,QADF,eASE,iDAAC,oDAAD;AAAQ,eAAO,EAAC,SAAhB;AAA0B,iBAAS,EAAC,EAApC;AAAuC,eAAO,EAAE,KAAKM;AAArD,eATF,eAYE,iDAAC,oDAAD;AACE,eAAO,EAAC,SADV;AAEE,iBAAS,EAAC,YAFZ;AAGE,eAAO,EAAE,KAAKA,UAHhB;AAIE,gBAAQ,EAAE,KAAKX,KAAL,CAAWY,gBAAX,KAAgC,EAAhC,GAAqC,UAArC,GAAkD;AAJ9D,0CAZF,CAFF,eAuBE,4DAvBF,eAwBE,iDAAC,oDAAD,qBACE,iDAAC,2DAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+DADF,CADF,eAIE,iDAAC,oDAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,yMADF,eAEE,iDAAC,4DAAD;AAAc,UAAE,EAAC,QAAjB;AAA0B,iBAAS,EAAC,OAApC;AAA4C,gBAAQ,EAAE,KAAKL;AAA3D,sBACE;AAAQ,aAAK,EAAC;AAAd,gBADF,eAEE;AAAQ,aAAK,EAAC;AAAd,eAFF,eAGE;AAAQ,aAAK,EAAC;AAAd,sBAHF,CAFF,eAOE;AAAM,cAAM,EAAE,KAAKH,cAAL,EAAd;AAAqC,cAAM,EAAC;AAA5C,sBACE,iDAAC,oDAAD;AAAQ,eAAO,EAAC,SAAhB;AAA0B,YAAI,EAAC,QAA/B;AAAwC,iBAAS,EAAC;AAAlD,0CADF,CAPF,CAJF,CAxBF,CADF;AA6CD;;;;EAhEoCS,4C","file":"src_components_Dashboard_js.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Row, Card } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default class Dashboard extends Component {\n  state = {\n    uploadFileName: '',\n    downloadFormat: 'json',\n  };\n\n  downloadUrl = '/testforjob/api/download/';\n  getDownloadUrl = () => {\n    return '/testforjob/api/download_' + this.state.downloadFormat + '/';\n  };\n\n  change = (e) => {};\n\n  selectFormat = (e) => {\n    //console.log('selectFormat', e.target.value);\n    this.setState({ downloadFormat: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form.Label className=\"col-5\">Файл загрузки в BD</Form.Label>\n        <Row md=\"auto\">\n          <input\n            className=\"form-control col-6 ml-4\"\n            name=\"uploadFileName\"\n            id=\"uploadFileName\"\n            type=\"text\"\n            value={this.state.uploadFileName}\n            onChange={this.change}\n          />\n          <Button variant=\"primary\" className=\"\" onClick={this.selectFile}>\n            ...\n          </Button>\n          <Button\n            variant=\"primary\"\n            className=\"col-1 ml-4\"\n            onClick={this.selectFile}\n            disabled={this.state.downloadFileName === '' ? 'disabled' : ''}\n          >\n            Старт\n          </Button>\n        </Row>\n        <hr />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Выгрузка BD</Form.Label>\n          </Card.Header>\n          <Row>\n            <Form.Label className=\"col-3 ml-4\">Выберите формат сохраняемого файла</Form.Label>\n            <Form.Control as=\"select\" className=\"col-2\" onChange={this.selectFormat}>\n              <option value=\"json\">json</option>\n              <option value=\"csv\">csv</option>\n              <option value=\"text\">text/plain</option>\n            </Form.Control>\n            <form action={this.getDownloadUrl()} method=\"post\">\n              <Button variant=\"primary\" type=\"submit\" className=\"col ml-4\">\n                Старт\n              </Button>\n            </form>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}