{"version":3,"sources":["webpack://frontend/./src/components/Dashboard.js"],"names":["Dashboard","state","alert","showAlert","errors","messages","uploadFile","clearDB","websocket","ws","status","downloadFormat","downloadUrl","uploadUrl","setTimeout","setState","length","join","getDownloadUrl","setWebsocketStatus","console","log","checkWebsocket","readyState","WebSocket","CLOSED","connectWebsocket","that","connectInterval","ws_scheme","window","location","protocol","url","host","onopen","timeout","clearTimeout","onmessage","evt","message","JSON","parse","data","startsWith","onclose","Math","min","onerror","e","selectFormat","target","value","selectFileToUpload","input","document","createElement","type","onchange","file","files","click","sendFile","reader","FileReader","readAsText","onload","readerEvent","content","result","send","stringify","cleardb","name","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAEqBA,S;;;;;;;;;;;;;;oHACnBC,K,GAAQ;AACNC,WAAK,EAAE;AACLC,iBAAS,EAAE,KADN;AAELC,cAAM,EAAE,EAFH;AAGLC,gBAAQ,EAAE;AAHL,OADD;AAMNC,gBAAU,EAAE,IANN;AAONC,aAAO,EAAE,KAPH;AAQNC,eAAS,EAAE;AACTC,UAAE,EAAE,IADK;AAETC,cAAM,EAAE;AAFC,OARL;AAYNC,oBAAc,EAAE;AAZV,K,QAeRC,W,GAAc,2B,QACdC,S,GAAY,wB,QAEZV,S,GAAY,YAAM;AAChB,UAAI,MAAKF,KAAL,CAAWC,KAAX,CAAiBC,SAArB,EAAgC;AAC9BW,kBAAU,CACR;AAAA,iBACE,MAAKC,QAAL,CAAc;AACZb,iBAAK,EAAE;AAAEG,sBAAQ,EAAE,EAAZ;AAAgBD,oBAAM,EAAE,EAAxB;AAA4BD,uBAAS,EAAE;AAAvC;AADK,WAAd,CADF;AAAA,SADQ,EAKR,IALQ,CAAV;AAOA,YAAI,MAAKF,KAAL,CAAWC,KAAX,CAAiBE,MAAjB,CAAwBY,MAAxB,GAAiC,CAArC,EACE,oBACE,iDAAC,oDAAD;AAAO,iBAAO,EAAC;AAAf,WAAyB,MAAKf,KAAL,CAAWC,KAAX,CAAiBE,MAAjB,CAAwBa,IAAxB,CAA6B,IAA7B,CAAzB,CADF;AAGF,YAAI,MAAKhB,KAAL,CAAWC,KAAX,CAAiBG,QAAjB,CAA0BW,MAA1B,GAAmC,CAAvC,EACE,oBACE,iDAAC,oDAAD;AAAO,iBAAO,EAAC;AAAf,WACG,MAAKf,KAAL,CAAWC,KAAX,CAAiBG,QAAjB,CAA0BY,IAA1B,CAA+B,IAA/B,CADH,CADF;AAKH;;AACD,0BAAO,6DAAP;AACD,K,QAEDC,c,GAAiB,YAAM;AACrB,gDAAmC,MAAKjB,KAAL,CAAWU,cAA9C;AACD,K,QAEDQ,kB,GAAqB,UAACT,MAAD,EAAY;AAC/B,UAAMF,SAAS,mCAAQ,MAAKP,KAAL,CAAWO,SAAnB;AAA8BE,cAAM,EAAEA;AAAtC,QAAf;;AACAU,aAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCb,SAAlC;;AACA,YAAKO,QAAL,CAAc;AAAEP,iBAAS,EAATA;AAAF,OAAd;AACD,K,QAEDc,c,GAAiB,YAAM;AACrB,UAAMb,EAAE,GAAG,MAAKR,KAAL,CAAWO,SAAX,CAAqBC,EAAhC;AACA,UAAI,CAACA,EAAD,IAAOA,EAAE,CAACc,UAAH,KAAkBC,SAAS,CAACC,MAAvC,EAA+C,MAAKC,gBAAL,GAF1B,CAEmD;AACzE,K,QAEDA,gB,GAAmB,YAAM;AACvB,UAAMC,IAAI,gCAAV,CADuB,CACJ;;;AACnB,UAAIC,eAAJ;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAA7B,GAAwC,KAAxC,GAAgD,IAAlE;AACA,UAAMC,GAAG,aAAMJ,SAAN,gBAAqBC,MAAM,CAACC,QAAP,CAAgBG,IAArC,SAA4C,MAAKrB,SAAjD,CAAT;AACA,UAAMJ,EAAE,GAAG,IAAIe,SAAJ,CAAcS,GAAd,CAAX;;AACAxB,QAAE,CAAC0B,MAAH,GAAY,YAAM;AAChBR,YAAI,CAACS,OAAL,GAAe,GAAf,CADgB,CACI;;AACpBC,oBAAY,CAACT,eAAD,CAAZ,CAFgB,CAGhB;;AACA,cAAKT,kBAAL,wBAAwCc,GAAxC;AACD,OALD;;AAOAxB,QAAE,CAAC6B,SAAH,GAAe,UAACC,GAAD,EAAS;AACtB;AACA,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,EAAqB,SAArB,CAAhB,CAFsB,CAGtB;AACA;;AACA,cAAK5B,QAAL,CAAc;AACZb,eAAK,EAAE;AACLG,oBAAQ,EAAEmC,OAAO,CAACI,UAAR,CAAmB,SAAnB,IAAgC,CAACJ,OAAD,CAAhC,GAA4C,EADjD;AAELpC,kBAAM,EAAEoC,OAAO,CAACI,UAAR,CAAmB,OAAnB,IAA8B,CAACJ,OAAD,CAA9B,GAA0C,EAF7C;AAGLrC,qBAAS,EAAE;AAHN;AADK,SAAd;AAOD,OAZD;;AAcAM,QAAE,CAACoC,OAAH,GAAa,YAAM;AACjB;AACA,cAAK1B,kBAAL,CAAwB,cAAxB,EAFiB,CAGjB;;;AACAQ,YAAI,CAACS,OAAL,GAAeT,IAAI,CAACS,OAAL,GAAeT,IAAI,CAACS,OAAnC,CAJiB,CAI2B;;AAC5CR,uBAAe,GAAGd,UAAU,CAC1B,MAAKQ,cADqB,EAE1BwB,IAAI,CAACC,GAAL,CAAS,KAAT,EAAgBpB,IAAI,CAACS,OAArB,CAF0B,CAA5B,CALiB,CAQd;AACJ,OATD;;AAWA3B,QAAE,CAACuC,OAAH,GAAa,UAACC,CAAD,EAAO;AAClB7B,eAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B4B,CAA/B;;AACA,cAAK9B,kBAAL,4BAA4C8B,CAA5C;AACD,OAHD,CAtCuB,CA0CvB;;;AACA,UAAMzC,SAAS,mCAAQ,MAAKP,KAAL,CAAWO,SAAnB;AAA8BC,UAAE,EAAEA;AAAlC,QAAf,CA3CuB,CA4CvB;;;AACA,YAAKM,QAAL,CAAc;AAAEP,iBAAS,EAATA;AAAF,OAAd;AACD,K,QAMD0C,Y,GAAe,UAACD,CAAD,EAAO;AACpB;AACA,YAAKlC,QAAL,CAAc;AAAEJ,sBAAc,EAAEsC,CAAC,CAACE,MAAF,CAASC;AAA3B,OAAd;AACD,K,QAEDC,kB,GAAqB,UAACJ,CAAD,EAAO;AAC1B,UAAMK,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,WAAK,CAACG,IAAN,GAAa,MAAb;;AAEAH,WAAK,CAACI,QAAN,GAAiB,UAACT,CAAD,EAAO;AACtB,YAAMU,IAAI,GAAGV,CAAC,CAACE,MAAF,CAASS,KAAT,CAAe,CAAf,CAAb,CADsB,CAEtB;;AACA,cAAK7C,QAAL,CAAc;AAAET,oBAAU,EAAEqD;AAAd,SAAd;AACD,OAJD;;AAMAL,WAAK,CAACO,KAAN;AACD,K,QAEDC,Q,GAAW,UAACb,CAAD,EAAO;AAChB,UAAMc,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,YAAM,CAACE,UAAP,CAAkB,MAAKhE,KAAL,CAAWK,UAA7B,EAAyC,OAAzC,EAFgB,CAIhB;;AACAyD,YAAM,CAACG,MAAP,GAAgB,UAACC,WAAD,EAAiB;AAC/B,YAAMC,OAAO,GAAGD,WAAW,CAAChB,MAAZ,CAAmBkB,MAAnC,CAD+B,CACY;AAC3C;;AACA,cAAKpE,KAAL,CAAWO,SAAX,CAAqBC,EAArB,CAAwB6D,IAAxB,CACE7B,IAAI,CAAC8B,SAAL,CAAe;AAAEC,iBAAO,EAAE,MAAKvE,KAAL,CAAWM,OAAtB;AAA+B6D,iBAAO,EAAEA;AAAxC,SAAf,CADF;AAGD,OAND;AAOD,K,QAED7D,O,GAAU,YAAM;AACd,UAAMA,OAAO,GAAG,CAAC,MAAKN,KAAL,CAAWM,OAA5B,CADc,CAEd;;AACA,YAAKQ,QAAL,CAAc;AAAER,eAAO,EAAPA;AAAF,OAAd;AACD,K;;;;;wCAxCmB;AAClB,WAAKmB,gBAAL;AACD;;;6BAwCQ;AACP,0BACE,8DACG,KAAKvB,SAAL,EADH,eAEE,iDAAC,oDAAD,qBACE,iDAAC,2DAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,sEADF,eAEE;AAAK,iBAAS,EAAC;AAAf,+BACqB,KAAKF,KAAL,CAAWO,SAAX,CAAqBE,MAD1C,CAFF,CADF,eAOE,iDAAC,yDAAD,qBACE,iDAAC,oDAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+DADF,eAEE,iDAAC,0DAAD;AACE,YAAI,EAAC,SADP;AAEE,aAAK,EAAE,KAAKT,KAAL,CAAWM,OAFpB;AAGE,gBAAQ,EAAE,KAAKA,OAHjB;AAIE,iBAAS,EAAC;AAJZ,QAFF,CADF,eAUE,iDAAC,oDAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+FADF,eAIE;AACE,iBAAS,EAAC,oBADZ;AAEE,YAAI,EAAC,gBAFP;AAGE,UAAE,EAAC,gBAHL;AAIE,YAAI,EAAC,MAJP;AAKE,aAAK,EAAE,KAAKN,KAAL,CAAWK,UAAX,GAAwB,KAAKL,KAAL,CAAWK,UAAX,CAAsBmE,IAA9C,GAAqD,EAL9D,CAME;AANF;AAOE,gBAAQ;AAPV,QAJF,eAaE,iDAAC,oDAAD;AACE,eAAO,EAAC,SADV;AAEE,iBAAS,EAAC,EAFZ;AAGE,eAAO,EAAE,KAAKpB;AAHhB,eAbF,eAoBE,iDAAC,oDAAD;AACE,eAAO,EAAC,SADV;AAEE,iBAAS,EAAC,YAFZ;AAGE,eAAO,EAAE,KAAKS,QAHhB;AAIE,gBAAQ,EAAE,KAAK7D,KAAL,CAAWK,UAAX,GAAwB,EAAxB,GAA6B;AAJzC,0CApBF,CAVF,CAPF,CAFF,eAkDE,4DAlDF,eAmDE,iDAAC,oDAAD,qBACE,iDAAC,2DAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+DADF,CADF,eAIE,iDAAC,yDAAD,qBACE,iDAAC,oDAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,yMADF,eAIE,iDAAC,4DAAD;AACE,UAAE,EAAC,QADL;AAEE,iBAAS,EAAC,OAFZ;AAGE,gBAAQ,EAAE,KAAK4C;AAHjB,sBAKE;AAAQ,aAAK,EAAC;AAAd,gBALF,eAME;AAAQ,aAAK,EAAC;AAAd,eANF,eAOE;AAAQ,aAAK,EAAC;AAAd,sBAPF,CAJF,eAaE;AAAM,cAAM,EAAE,KAAKhC,cAAL,EAAd;AAAqC,cAAM,EAAC;AAA5C,sBACE,iDAAC,oDAAD;AAAQ,eAAO,EAAC,SAAhB;AAA0B,YAAI,EAAC,QAA/B;AAAwC,iBAAS,EAAC;AAAlD,0CADF,CAbF,CADF,CAJF,CAnDF,CADF;AAgFD;;;;EApOoCwD,4C","file":"src_components_Dashboard_js.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Card, Alert } from \"react-bootstrap\";\n\nexport default class Dashboard extends Component {\n  state = {\n    alert: {\n      showAlert: false,\n      errors: [],\n      messages: [],\n    },\n    uploadFile: null,\n    clearDB: false,\n    websocket: {\n      ws: null,\n      status: \"disconnected\",\n    },\n    downloadFormat: \"json\",\n  };\n\n  downloadUrl = \"/testforjob/api/download/\";\n  uploadUrl = \"/testforjob/ws/upload/\";\n\n  showAlert = () => {\n    if (this.state.alert.showAlert) {\n      setTimeout(\n        () =>\n          this.setState({\n            alert: { messages: [], errors: [], showAlert: false },\n          }),\n        5000\n      );\n      if (this.state.alert.errors.length > 0)\n        return (\n          <Alert variant=\"danger\">{this.state.alert.errors.join(\". \")}</Alert>\n        );\n      if (this.state.alert.messages.length > 0)\n        return (\n          <Alert variant=\"primary\">\n            {this.state.alert.messages.join(\". \")}\n          </Alert>\n        );\n    }\n    return <div />;\n  };\n\n  getDownloadUrl = () => {\n    return `/testforjob/api/download_${this.state.downloadFormat}/`;\n  };\n\n  setWebsocketStatus = (status) => {\n    const websocket = { ...this.state.websocket, status: status };\n    console.log(\"setWebsocketStatus\", websocket);\n    this.setState({ websocket });\n  };\n\n  checkWebsocket = () => {\n    const ws = this.state.websocket.ws;\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connectWebsocket(); //check if websocket instance is closed, if so call `connect` function.\n  };\n\n  connectWebsocket = () => {\n    const that = this; // cache the this\n    let connectInterval;\n    const ws_scheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const url = `${ws_scheme}://${window.location.host}${this.uploadUrl}`;\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      that.timeout = 250; // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval);\n      //console.log(`connected to ${url}`);\n      this.setWebsocketStatus(`connected to ${url}`);\n    };\n\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data)[\"message\"];\n      //console.log(message);\n      //this.setWebsocketStatus(message);\n      this.setState({\n        alert: {\n          messages: message.startsWith(\"success\") ? [message] : [],\n          errors: message.startsWith(\"error\") ? [message] : [],\n          showAlert: true,\n        },\n      });\n    };\n\n    ws.onclose = () => {\n      //console.log('disconnected');\n      this.setWebsocketStatus(\"disconnected\");\n      // automatically try to reconnect on connection loss\n      that.timeout = that.timeout + that.timeout; //increment retry interval\n      connectInterval = setTimeout(\n        this.checkWebsocket,\n        Math.min(10000, that.timeout)\n      ); //call check function after timeout\n    };\n\n    ws.onerror = (e) => {\n      console.log(\"websocket error\", e);\n      this.setWebsocketStatus(`websocket error: ${e}`);\n    };\n    //console.log('Dashboard componentDidMount', ws);\n    const websocket = { ...this.state.websocket, ws: ws };\n    //console.log('set ws', websocket);\n    this.setState({ websocket });\n  };\n\n  componentDidMount() {\n    this.connectWebsocket();\n  }\n\n  selectFormat = (e) => {\n    //console.log('selectFormat', e.target.value);\n    this.setState({ downloadFormat: e.target.value });\n  };\n\n  selectFileToUpload = (e) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      //console.log('selectFileToUpload', file);\n      this.setState({ uploadFile: file });\n    };\n\n    input.click();\n  };\n\n  sendFile = (e) => {\n    const reader = new FileReader();\n    reader.readAsText(this.state.uploadFile, \"UTF-8\");\n\n    // here we tell the reader what to do when it's done reading...\n    reader.onload = (readerEvent) => {\n      const content = readerEvent.target.result; // this is the content!\n      //console.log(content);\n      this.state.websocket.ws.send(\n        JSON.stringify({ cleardb: this.state.clearDB, content: content })\n      );\n    };\n  };\n\n  clearDB = () => {\n    const clearDB = !this.state.clearDB;\n    //console.log('clearDB', clearDB);\n    this.setState({ clearDB });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.showAlert()}\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Загрузка в DB</Form.Label>\n            <div className=\"col-12 text-left\">\n              Websocket status: {this.state.websocket.status}\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Form.Label className=\"col-2 text-left\">Очистить DB</Form.Label>\n              <Form.Check\n                name=\"clearBD\"\n                value={this.state.clearDB}\n                onChange={this.clearDB}\n                className=\"ml-2\"\n              />\n            </Row>\n            <Row>\n              <Form.Label className=\"col-2 text-left\">\n                Файл загрузки в DB\n              </Form.Label>\n              <input\n                className=\"form-control col-3\"\n                name=\"uploadFileName\"\n                id=\"uploadFileName\"\n                type=\"text\"\n                value={this.state.uploadFile ? this.state.uploadFile.name : \"\"}\n                //onChange={this.change}\n                readOnly\n              />\n              <Button\n                variant=\"primary\"\n                className=\"\"\n                onClick={this.selectFileToUpload}\n              >\n                ...\n              </Button>\n              <Button\n                variant=\"primary\"\n                className=\"col-1 ml-2\"\n                onClick={this.sendFile}\n                disabled={this.state.uploadFile ? \"\" : \"disabled\"}\n              >\n                Старт\n              </Button>\n            </Row>\n          </Card.Body>\n        </Card>\n        <hr />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Выгрузка DB</Form.Label>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Form.Label className=\"col-3 text-left\">\n                Выберите формат сохраняемого файла\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                className=\"col-2\"\n                onChange={this.selectFormat}\n              >\n                <option value=\"json\">json</option>\n                <option value=\"csv\">csv</option>\n                <option value=\"text\">text/plain</option>\n              </Form.Control>\n              <form action={this.getDownloadUrl()} method=\"post\">\n                <Button variant=\"primary\" type=\"submit\" className=\"col ml-4\">\n                  Старт\n                </Button>\n              </form>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}