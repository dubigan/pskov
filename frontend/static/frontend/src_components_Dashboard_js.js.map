{"version":3,"sources":["webpack://frontend/./src/components/Dashboard.js"],"names":["Dashboard","state","uploadFile","websocket","ws","status","downloadFormat","downloadUrl","uploadUrl","getDownloadUrl","setWebsocketStatus","console","log","setState","checkWebsocket","readyState","WebSocket","CLOSED","connectWebsocket","that","connectInterval","ws_scheme","window","location","protocol","url","host","onopen","timeout","clearTimeout","onmessage","evt","message","JSON","parse","data","onclose","setTimeout","Math","min","onerror","e","selectFormat","target","value","selectFileToUpload","input","document","createElement","type","onchange","file","files","click","sendFile","reader","FileReader","readAsText","onload","readerEvent","content","result","send","name","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAEqBA,S;;;;;;;;;;;;;;oHACnBC,K,GAAQ;AACNC,gBAAU,EAAE,IADN;AAENC,eAAS,EAAE;AACTC,UAAE,EAAE,IADK;AAETC,cAAM,EAAE;AAFC,OAFL;AAMNC,oBAAc,EAAE;AANV,K,QASRC,W,GAAc,2B,QACdC,S,GAAY,wB,QAEZC,c,GAAiB,YAAM;AACrB,gDAAmC,MAAKR,KAAL,CAAWK,cAA9C;AACD,K,QAEDI,kB,GAAqB,UAACL,MAAD,EAAY;AAC/B,UAAMF,SAAS,mCAAQ,MAAKF,KAAL,CAAWE,SAAnB;AAA8BE,cAAM,EAAEA;AAAtC,QAAf;;AACAM,aAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCT,SAAlC;;AACA,YAAKU,QAAL,CAAc;AAAEV,iBAAS,EAATA;AAAF,OAAd;AACD,K,QAEDW,c,GAAiB,YAAM;AACrB,UAAMV,EAAE,GAAG,MAAKH,KAAL,CAAWE,SAAX,CAAqBC,EAAhC;AACA,UAAI,CAACA,EAAD,IAAOA,EAAE,CAACW,UAAH,KAAkBC,SAAS,CAACC,MAAvC,EAA+C,MAAKC,gBAAL,GAF1B,CAEmD;AACzE,K,QAEDA,gB,GAAmB,YAAM;AACvB,UAAMC,IAAI,gCAAV,CADuB,CACJ;;;AACnB,UAAIC,eAAJ;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAA7B,GAAwC,KAAxC,GAAgD,IAAlE;AACA,UAAMC,GAAG,aAAMJ,SAAN,gBAAqBC,MAAM,CAACC,QAAP,CAAgBG,IAArC,SAA4C,MAAKlB,SAAjD,CAAT;AACA,UAAMJ,EAAE,GAAG,IAAIY,SAAJ,CAAcS,GAAd,CAAX;;AACArB,QAAE,CAACuB,MAAH,GAAY,YAAM;AAChBR,YAAI,CAACS,OAAL,GAAe,GAAf,CADgB,CACI;;AACpBC,oBAAY,CAACT,eAAD,CAAZ;AACAT,eAAO,CAACC,GAAR,wBAA4Ba,GAA5B;;AACA,cAAKf,kBAAL,wBAAwCe,GAAxC;AACD,OALD;;AAOArB,QAAE,CAAC0B,SAAH,GAAe,UAACC,GAAD,EAAS;AACtB;AACA,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAhB,CAFsB,CAGtB;;AACAxB,eAAO,CAACC,GAAR,CAAYoB,OAAZ;AACD,OALD;;AAOA5B,QAAE,CAACgC,OAAH,GAAa,YAAM;AACjBzB,eAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,cAAKF,kBAAL,CAAwB,cAAxB,EAFiB,CAGjB;;;AACAS,YAAI,CAACS,OAAL,GAAeT,IAAI,CAACS,OAAL,GAAeT,IAAI,CAACS,OAAnC,CAJiB,CAI2B;;AAC5CR,uBAAe,GAAGiB,UAAU,CAAC,MAAKvB,cAAN,EAAsBwB,IAAI,CAACC,GAAL,CAAS,KAAT,EAAgBpB,IAAI,CAACS,OAArB,CAAtB,CAA5B,CALiB,CAKiE;AACnF,OAND;;AAQAxB,QAAE,CAACoC,OAAH,GAAa,UAACC,CAAD,EAAO;AAClB9B,eAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B6B,CAA/B;;AACA,cAAK/B,kBAAL,4BAA4C+B,CAA5C;AACD,OAHD,CA5BuB,CAgCvB;;;AACA,UAAMtC,SAAS,mCAAQ,MAAKF,KAAL,CAAWE,SAAnB;AAA8BC,UAAE,EAAEA;AAAlC,QAAf,CAjCuB,CAkCvB;;;AACA,YAAKS,QAAL,CAAc;AAAEV,iBAAS,EAATA;AAAF,OAAd;AACD,K,QAMDuC,Y,GAAe,UAACD,CAAD,EAAO;AACpB;AACA,YAAK5B,QAAL,CAAc;AAAEP,sBAAc,EAAEmC,CAAC,CAACE,MAAF,CAASC;AAA3B,OAAd;AACD,K,QAEDC,kB,GAAqB,UAACJ,CAAD,EAAO;AAC1B,UAAMK,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,WAAK,CAACG,IAAN,GAAa,MAAb;;AAEAH,WAAK,CAACI,QAAN,GAAiB,UAACT,CAAD,EAAO;AACtB,YAAMU,IAAI,GAAGV,CAAC,CAACE,MAAF,CAASS,KAAT,CAAe,CAAf,CAAb,CADsB,CAEtB;;AACA,cAAKvC,QAAL,CAAc;AAAEX,oBAAU,EAAEiD;AAAd,SAAd;AACD,OAJD;;AAMAL,WAAK,CAACO,KAAN;AACD,K,QAEDC,Q,GAAW,UAACb,CAAD,EAAO;AAChB,UAAMc,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,YAAM,CAACE,UAAP,CAAkB,MAAKxD,KAAL,CAAWC,UAA7B,EAAyC,OAAzC,EAFgB,CAIhB;;AACAqD,YAAM,CAACG,MAAP,GAAgB,UAACC,WAAD,EAAiB;AAC/B,YAAMC,OAAO,GAAGD,WAAW,CAAChB,MAAZ,CAAmBkB,MAAnC,CAD+B,CACY;;AAC3ClD,eAAO,CAACC,GAAR,CAAYgD,OAAZ;;AACA,cAAK3D,KAAL,CAAWE,SAAX,CAAqBC,EAArB,CAAwB0D,IAAxB,CAA6BF,OAA7B;AACD,OAJD;AAKD,K;;;;;wCAhCmB;AAClB,WAAK1C,gBAAL;AACD;;;6BAgCQ;AACP,0BACE,2EACE,iDAAC,oDAAD,qBACE,iDAAC,2DAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,sEADF,CADF,eAKE;AAAK,iBAAS,EAAC;AAAf,+BAA2C,KAAKjB,KAAL,CAAWE,SAAX,CAAqBE,MAAhE,CALF,eAME,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+FANF,eAOE,iDAAC,oDAAD;AAAK,UAAE,EAAC;AAAR,sBACE;AACE,iBAAS,EAAC,yBADZ;AAEE,YAAI,EAAC,gBAFP;AAGE,UAAE,EAAC,gBAHL;AAIE,YAAI,EAAC,MAJP;AAKE,aAAK,EAAE,KAAKJ,KAAL,CAAWC,UAAX,GAAwB,KAAKD,KAAL,CAAWC,UAAX,CAAsB6D,IAA9C,GAAqD,EAL9D,CAME;AANF;AAOE,gBAAQ;AAPV,QADF,eAUE,iDAAC,oDAAD;AAAQ,eAAO,EAAC,SAAhB;AAA0B,iBAAS,EAAC,EAApC;AAAuC,eAAO,EAAE,KAAKlB;AAArD,eAVF,eAaE,iDAAC,oDAAD;AACE,eAAO,EAAC,SADV;AAEE,iBAAS,EAAC,YAFZ;AAGE,eAAO,EAAE,KAAKS,QAHhB;AAIE,gBAAQ,EAAE,KAAKrD,KAAL,CAAWC,UAAX,GAAwB,EAAxB,GAA6B;AAJzC,0CAbF,CAPF,CADF,eA+BE,4DA/BF,eAgCE,iDAAC,oDAAD,qBACE,iDAAC,2DAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,+DADF,CADF,eAIE,iDAAC,oDAAD,qBACE,iDAAC,0DAAD;AAAY,iBAAS,EAAC;AAAtB,yMADF,eAEE,iDAAC,4DAAD;AAAc,UAAE,EAAC,QAAjB;AAA0B,iBAAS,EAAC,OAApC;AAA4C,gBAAQ,EAAE,KAAKwC;AAA3D,sBACE;AAAQ,aAAK,EAAC;AAAd,gBADF,eAEE;AAAQ,aAAK,EAAC;AAAd,eAFF,eAGE;AAAQ,aAAK,EAAC;AAAd,sBAHF,CAFF,eAOE;AAAM,cAAM,EAAE,KAAKjC,cAAL,EAAd;AAAqC,cAAM,EAAC;AAA5C,sBACE,iDAAC,oDAAD;AAAQ,eAAO,EAAC,SAAhB;AAA0B,YAAI,EAAC,QAA/B;AAAwC,iBAAS,EAAC;AAAlD,0CADF,CAPF,CAJF,CAhCF,CADF;AAqDD;;;;EA1JoCuD,4C","file":"src_components_Dashboard_js.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Row, Card } from 'react-bootstrap';\n\nexport default class Dashboard extends Component {\n  state = {\n    uploadFile: null,\n    websocket: {\n      ws: null,\n      status: 'disconnected',\n    },\n    downloadFormat: 'json',\n  };\n\n  downloadUrl = '/testforjob/api/download/';\n  uploadUrl = '/testforjob/ws/upload/';\n\n  getDownloadUrl = () => {\n    return `/testforjob/api/download_${this.state.downloadFormat}/`;\n  };\n\n  setWebsocketStatus = (status) => {\n    const websocket = { ...this.state.websocket, status: status };\n    console.log('setWebsocketStatus', websocket);\n    this.setState({ websocket });\n  };\n\n  checkWebsocket = () => {\n    const ws = this.state.websocket.ws;\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connectWebsocket(); //check if websocket instance is closed, if so call `connect` function.\n  };\n\n  connectWebsocket = () => {\n    const that = this; // cache the this\n    let connectInterval;\n    const ws_scheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n    const url = `${ws_scheme}://${window.location.host}${this.uploadUrl}`;\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      that.timeout = 250; // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval);\n      console.log(`connected to ${url}`);\n      this.setWebsocketStatus(`connected to ${url}`);\n    };\n\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data);\n      //this.setState({dataFromServer: message})\n      console.log(message);\n    };\n\n    ws.onclose = () => {\n      console.log('disconnected');\n      this.setWebsocketStatus('disconnected');\n      // automatically try to reconnect on connection loss\n      that.timeout = that.timeout + that.timeout; //increment retry interval\n      connectInterval = setTimeout(this.checkWebsocket, Math.min(10000, that.timeout)); //call check function after timeout\n    };\n\n    ws.onerror = (e) => {\n      console.log('websocket error', e);\n      this.setWebsocketStatus(`websocket error: ${e}`);\n    };\n    //console.log('Dashboard componentDidMount', ws);\n    const websocket = { ...this.state.websocket, ws: ws };\n    //console.log('set ws', websocket);\n    this.setState({ websocket });\n  };\n\n  componentDidMount() {\n    this.connectWebsocket();\n  }\n\n  selectFormat = (e) => {\n    //console.log('selectFormat', e.target.value);\n    this.setState({ downloadFormat: e.target.value });\n  };\n\n  selectFileToUpload = (e) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      //console.log('selectFileToUpload', file);\n      this.setState({ uploadFile: file });\n    };\n\n    input.click();\n  };\n\n  sendFile = (e) => {\n    const reader = new FileReader();\n    reader.readAsText(this.state.uploadFile, 'UTF-8');\n\n    // here we tell the reader what to do when it's done reading...\n    reader.onload = (readerEvent) => {\n      const content = readerEvent.target.result; // this is the content!\n      console.log(content);\n      this.state.websocket.ws.send(content);\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Загрузка в BD</Form.Label>\n          </Card.Header>\n\n          <div className=\"col-12\">Websocket status: {this.state.websocket.status}</div>\n          <Form.Label className=\"col-5\">Файл загрузки в BD</Form.Label>\n          <Row md=\"auto\">\n            <input\n              className=\"form-control col-6 ml-4\"\n              name=\"uploadFileName\"\n              id=\"uploadFileName\"\n              type=\"text\"\n              value={this.state.uploadFile ? this.state.uploadFile.name : ''}\n              //onChange={this.change}\n              readOnly\n            />\n            <Button variant=\"primary\" className=\"\" onClick={this.selectFileToUpload}>\n              ...\n            </Button>\n            <Button\n              variant=\"primary\"\n              className=\"col-1 ml-4\"\n              onClick={this.sendFile}\n              disabled={this.state.uploadFile ? '' : 'disabled'}\n            >\n              Старт\n            </Button>\n          </Row>\n        </Card>\n        <hr />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Выгрузка BD</Form.Label>\n          </Card.Header>\n          <Row>\n            <Form.Label className=\"col-3 ml-4\">Выберите формат сохраняемого файла</Form.Label>\n            <Form.Control as=\"select\" className=\"col-2\" onChange={this.selectFormat}>\n              <option value=\"json\">json</option>\n              <option value=\"csv\">csv</option>\n              <option value=\"text\">text/plain</option>\n            </Form.Control>\n            <form action={this.getDownloadUrl()} method=\"post\">\n              <Button variant=\"primary\" type=\"submit\" className=\"col ml-4\">\n                Старт\n              </Button>\n            </form>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}