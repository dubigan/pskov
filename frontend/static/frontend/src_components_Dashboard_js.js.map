{"version":3,"sources":["webpack://frontend/./src/components/Alerts.js","webpack://frontend/./src/components/Dashboard.js"],"names":["Alerts","state","showAlert","timeout","setTimeout","setState","props","errors","map","e","Date","now","messages","m","prevProps","prevState","prevMessages","prevErrors","length","Component","Dashboard","uploadFile","clearDB","websocket","ws","status","downloadFormat","downloadUrl","uploadUrl","getDownloadUrl","setWebsocketStatus","console","log","checkWebsocket","readyState","WebSocket","CLOSED","connectWebsocket","that","connectInterval","ws_scheme","window","location","protocol","url","host","onopen","clearTimeout","onmessage","evt","message","JSON","parse","data","startsWith","onclose","Math","min","onerror","selectFormat","target","value","selectFileToUpload","input","document","createElement","type","onchange","file","files","click","sendFile","reader","FileReader","readAsText","onload","readerEvent","content","result","send","stringify","cleardb","name"],"mappings":"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","file":"src_components_Dashboard_js.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default class Alerts extends Component {\n  state = {\n    showAlert: false,\n    timeout: 5000,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let showAlert = false;\n    const { messages, errors } = this.props;\n    const { messages: prevMessages, errors: prevErrors } = prevProps;\n    // console.log(\"messages\", messages);\n    // console.log(\"errors\", errors);\n    // console.log(\"prevMessages\", prevMessages);\n    // console.log(\"prevErrors\", prevErrors);\n\n    if (errors && errors.length > 0 && errors !== prevErrors) {\n      showAlert = true;\n    }\n    if (messages && messages.length > 0 && messages !== prevMessages) {\n      showAlert = true;\n    }\n    // console.log(\"Alerts componentDidUpdate showAlert\", showAlert);\n    // console.log(\n    //   \"Alerts componentDidUpdate prevSate.showAlert\",\n    //   prevState.showAlert\n    // );\n    // console.log(\n    //   \"Alerts componentDidUpdate this.state.showAlert\",\n    //   this.state.showAlert\n    // );\n    if (showAlert && !this.state.showAlert) {\n      this.setState({\n        showAlert,\n      });\n    }\n  }\n\n  showAlert = () => {\n    if (this.state.showAlert) {\n      setTimeout(\n        () =>\n          this.setState({\n            showAlert: false,\n          }),\n        this.props.timeout ? this.props.timeout : this.state.timeout\n      );\n      return (\n        <>\n          {this.props.errors ? (\n            this.props.errors.map((e) => (\n              <Alert variant=\"danger\" key={Date.now()}>\n                {e}\n              </Alert>\n            ))\n          ) : (\n            <></>\n          )}\n          {this.props.messages ? (\n            this.props.messages.map((m) => (\n              <Alert variant=\"primary\" key={Date.now()}>\n                {m}\n              </Alert>\n            ))\n          ) : (\n            <></>\n          )}\n        </>\n      );\n    }\n    return <div />;\n  };\n\n  render() {\n    return <>{this.showAlert()}</>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Card } from \"react-bootstrap\";\nimport Alerts from \"./Alerts\";\n\nexport default class Dashboard extends Component {\n  state = {\n    errors: [],\n    messages: [],\n    uploadFile: null,\n    clearDB: false,\n    websocket: {\n      ws: null,\n      status: \"disconnected\",\n    },\n    downloadFormat: \"json\",\n  };\n\n  downloadUrl = \"/testforjob/api/download/\";\n  uploadUrl = \"/testforjob/ws/upload/\";\n\n  getDownloadUrl = () => {\n    return `/testforjob/api/download_${this.state.downloadFormat}/`;\n  };\n\n  setWebsocketStatus = (status) => {\n    const websocket = { ...this.state.websocket, status: status };\n    console.log(\"setWebsocketStatus\", websocket);\n    this.setState({ websocket });\n  };\n\n  checkWebsocket = () => {\n    const ws = this.state.websocket.ws;\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connectWebsocket(); //check if websocket instance is closed, if so call `connect` function.\n  };\n\n  connectWebsocket = () => {\n    const that = this; // cache the this\n    let connectInterval;\n    const ws_scheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const url = `${ws_scheme}://${window.location.host}${this.uploadUrl}`;\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      that.timeout = 250; // reset timer to 250 on open of websocket connection\n      clearTimeout(connectInterval);\n      //console.log(`connected to ${url}`);\n      this.setWebsocketStatus(`connected to ${url}`);\n    };\n\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data)[\"message\"];\n      //console.log(message);\n      //this.setWebsocketStatus(message);\n      this.setState({\n        messages: message.startsWith(\"success\") ? [message] : [],\n        errors: message.startsWith(\"error\") ? [message] : [],\n      });\n    };\n\n    ws.onclose = () => {\n      //console.log('disconnected');\n      this.setWebsocketStatus(\"disconnected\");\n      // automatically try to reconnect on connection loss\n      that.timeout = that.timeout + that.timeout; //increment retry interval\n      connectInterval = setTimeout(\n        this.checkWebsocket,\n        Math.min(10000, that.timeout)\n      ); //call check function after timeout\n    };\n\n    ws.onerror = (e) => {\n      console.log(\"websocket error\", e);\n      this.setWebsocketStatus(`websocket error: ${e}`);\n    };\n    //console.log('Dashboard componentDidMount', ws);\n    const websocket = { ...this.state.websocket, ws: ws };\n    //console.log('set ws', websocket);\n    this.setState({ websocket });\n  };\n\n  componentDidMount() {\n    this.connectWebsocket();\n  }\n\n  selectFormat = (e) => {\n    //console.log('selectFormat', e.target.value);\n    this.setState({ downloadFormat: e.target.value });\n  };\n\n  selectFileToUpload = (e) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      //console.log('selectFileToUpload', file);\n      this.setState({ uploadFile: file });\n    };\n\n    input.click();\n  };\n\n  sendFile = (e) => {\n    const reader = new FileReader();\n    reader.readAsText(this.state.uploadFile, \"UTF-8\");\n\n    // here we tell the reader what to do when it's done reading...\n    reader.onload = (readerEvent) => {\n      const content = readerEvent.target.result; // this is the content!\n      //console.log(content);\n      this.state.websocket.ws.send(\n        JSON.stringify({ cleardb: this.state.clearDB, content: content })\n      );\n    };\n  };\n\n  clearDB = () => {\n    const clearDB = !this.state.clearDB;\n    //console.log('clearDB', clearDB);\n    this.setState({ clearDB });\n  };\n\n  render() {\n    return (\n      <div>\n        <Alerts messages={this.state.messages} errors={this.state.errors} />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Загрузка в DB</Form.Label>\n            <div className=\"col-12 text-left\">\n              Websocket status: {this.state.websocket.status}\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Form.Label className=\"col-2 text-left\">Очистить DB</Form.Label>\n              <Form.Check\n                name=\"clearBD\"\n                value={this.state.clearDB}\n                onChange={this.clearDB}\n                className=\"ml-2\"\n              />\n            </Row>\n            <Row>\n              <Form.Label className=\"col-2 text-left\">\n                Файл загрузки в DB\n              </Form.Label>\n              <input\n                className=\"form-control col-3\"\n                name=\"uploadFileName\"\n                id=\"uploadFileName\"\n                type=\"text\"\n                value={this.state.uploadFile ? this.state.uploadFile.name : \"\"}\n                //onChange={this.change}\n                readOnly\n              />\n              <Button\n                variant=\"primary\"\n                className=\"\"\n                onClick={this.selectFileToUpload}\n              >\n                ...\n              </Button>\n              <Button\n                variant=\"primary\"\n                className=\"col-1 ml-2\"\n                onClick={this.sendFile}\n                disabled={this.state.uploadFile ? \"\" : \"disabled\"}\n              >\n                Старт\n              </Button>\n            </Row>\n          </Card.Body>\n        </Card>\n        <hr />\n        <Card>\n          <Card.Header>\n            <Form.Label className=\"col-5\">Выгрузка DB</Form.Label>\n          </Card.Header>\n          <Card.Body>\n            <Row>\n              <Form.Label className=\"col-3 text-left\">\n                Выберите формат сохраняемого файла\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                className=\"col-2\"\n                onChange={this.selectFormat}\n              >\n                <option value=\"json\">json</option>\n                <option value=\"csv\">csv</option>\n                <option value=\"text\">text/plain</option>\n              </Form.Control>\n              <form action={this.getDownloadUrl()} method=\"post\">\n                <Button variant=\"primary\" type=\"submit\" className=\"col ml-4\">\n                  Старт\n                </Button>\n              </form>\n            </Row>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}