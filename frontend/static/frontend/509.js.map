{"version":3,"sources":["webpack://frontend/./src/components/CarDetail.js"],"names":["CarDetail","state","alert","showAlert","errors","messages","car","manufacturer","model","production","color","power","mileage","comment","url","tooltipPlace","digitsOnly","e","charCode","preventDefault","getErrors","data","key","push","setTimeout","setState","length","variant","join","changeCar","target","name","value","changeDate","date","console","log","dt","Date","toLocaleDateString","saveCar","axios","then","res","redirect","window","location","href","catch","err","response","getCar","this","className","type","onChange","locale","ru","showYearDropdown","maxLength","onKeyPress","as","rows","placement","overlay","id","onClick","Component"],"mappings":"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","file":"509.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Row, Form, Button, Alert, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport { registerLocale } from 'react-datepicker';\r\n//import 'react-day-picker/lib/style.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { ru } from 'date-fns/locale/ru/index.js';\r\n\r\nexport default class CarDetail extends Component {\r\n  state = {\r\n    alert: {\r\n      showAlert: false,\r\n      errors: [],\r\n      messages: [],\r\n    },\r\n    car: {\r\n      manufacturer: '',\r\n      model: '',\r\n      production: '',\r\n      color: '',\r\n      power: '',\r\n      mileage: '',\r\n      comment: '',\r\n    },\r\n  };\r\n\r\n  url = '/testforjob/api/car/';\r\n  tooltipPlace = 'bottom';\r\n\r\n  componentDidMount() {\r\n    //registerLocale('ru', ru);\r\n    this.getCar();\r\n  }\r\n\r\n  digitsOnly = (e) => {\r\n    let charCode = e.charCode;\r\n    //console.log(charCode);\r\n    if (charCode < 48 || charCode > 57) {\r\n      // digits only\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  getErrors = (data) => {\r\n    const errors = [];\r\n    for (let key in data) {\r\n      errors.push(data[key]);\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  showAlert = () => {\r\n    if (this.state.alert.showAlert) {\r\n      setTimeout(\r\n        () => this.setState({ alert: { messages: [], errors: [], showAlert: false } }),\r\n        5000\r\n      );\r\n      if (this.state.alert.errors.length > 0)\r\n        return <Alert variant=\"danger\">{this.state.alert.errors.join('. ')}</Alert>;\r\n      if (this.state.alert.messages.length > 0)\r\n        return <Alert variant=\"primary\">{this.state.alert.messages.join('. ')}</Alert>;\r\n    }\r\n    return <div />;\r\n  };\r\n\r\n  changeCar = (e) => {\r\n    //console.log('changeCar', e);\r\n\r\n    const car = {\r\n      ...this.state.car,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n\r\n    //console.log('changeCar', car);\r\n\r\n    this.setState({ car });\r\n  };\r\n\r\n  changeDate = (date) => {\r\n    console.log('changeDate date', date);\r\n    const dt = new Date(date).toLocaleDateString('ru');\r\n    console.log('changeDate date', dt);\r\n    const car = {\r\n      ...this.state.car,\r\n      production: new Date(date).toLocaleDateString('ru'),\r\n    };\r\n    console.log('changeDate car', car);\r\n\r\n    this.setState({ car });\r\n  };\r\n\r\n  saveCar = (e) => {\r\n    axios\r\n      .post(this.url, { car: this.state.car })\r\n      .then((res) => {\r\n        console.log('saveCar', res.data);\r\n        if (res.data.redirect) {\r\n          window.location.href = res.data['redirect'];\r\n        }\r\n\r\n        this.setState({\r\n          car: res.data,\r\n          alert: {\r\n            showAlert: true,\r\n            messages: ['Информация об автомобиле сохранена'],\r\n            errors: [],\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('geCarDetail saveCar', err.response.data);\r\n        this.setState({\r\n          alert: { messages: [], errors: this.getErrors(err.response.data), showAlert: true },\r\n        });\r\n      });\r\n  };\r\n\r\n  getCar = () => {\r\n    axios\r\n      .post(this.url, {})\r\n      .then((res) => {\r\n        console.log('getCar', res.data);\r\n\r\n        this.setState({ car: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log('getCarDetail getCar', err.response.data);\r\n        this.setState({\r\n          alert: { messages: [], errors: this.getErrors(err.response.data), showAlert: true },\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.showAlert()}\r\n        <Card>\r\n          <Card.Title>Автомобиль</Card.Title>\r\n          <Card.Body>\r\n            <Row>\r\n              <div className=\"col-6\">\r\n                <Row>\r\n                  <Form.Label className=\"col-5\">Производитель</Form.Label>\r\n                  <input\r\n                    className=\"form-control col-6\"\r\n                    name=\"manufacturer\"\r\n                    type=\"text\"\r\n                    value={this.state.car.manufacturer}\r\n                    onChange={this.changeCar}\r\n                  />\r\n                  <Form.Label className=\"col-5\">Модель</Form.Label>\r\n                  <input\r\n                    className=\"form-control col-6\"\r\n                    name=\"model\"\r\n                    type=\"text\"\r\n                    value={this.state.car.model}\r\n                    onChange={this.changeCar}\r\n                  />\r\n\r\n                  <Form.Label className=\"col-5\">Дата выпуска</Form.Label>\r\n                  {/* <OverlayTrigger\r\n                    key={1}\r\n                    placement={this.tooltipPlace}\r\n                    overlay={<Tooltip id={`tooltip-1`}>Дата выпуска в формате dd.mm.yyy</Tooltip>}\r\n                  > */}\r\n                  <DatePicker\r\n                    className=\"col-11\"\r\n                    //format=\"dd.MM.yyyy\"\r\n                    locale={ru}\r\n                    name=\"production\"\r\n                    showYearDropdown={true}\r\n                    onChange={this.changeDate}\r\n                    value={this.state.car.production}\r\n                  />\r\n                  {/* </OverlayTrigger> */}\r\n                  <Form.Label className=\"col-5\" name=\"color\">\r\n                    Цвет\r\n                  </Form.Label>\r\n                  <input\r\n                    className=\"form-control col-6\"\r\n                    name=\"color\"\r\n                    type=\"text\"\r\n                    value={this.state.car.color}\r\n                    onChange={this.changeCar}\r\n                  />\r\n                  <Form.Label className=\"col-5\" name=\"age\">\r\n                    Мощность (л.с.)\r\n                  </Form.Label>\r\n                  <input\r\n                    className=\"form-control col-6\"\r\n                    name=\"power\"\r\n                    type=\"text\"\r\n                    maxLength=\"3\"\r\n                    value={this.state.car.power ? this.state.car.power : ''}\r\n                    onChange={this.changeCar}\r\n                    onKeyPress={this.digitsOnly}\r\n                  />\r\n                  <Form.Label className=\"col-5\" name=\"age\">\r\n                    Пробег (км.)\r\n                  </Form.Label>\r\n                  <input\r\n                    className=\"form-control col-6\"\r\n                    name=\"mileage\"\r\n                    type=\"text\"\r\n                    maxLength=\"10\"\r\n                    value={this.state.car.mileage ? this.state.car.mileage : ''}\r\n                    onChange={this.changeCar}\r\n                    onKeyPress={this.digitsOnly}\r\n                  />\r\n                </Row>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <Form.Label className=\"col-5\">Комментарий</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"7\"\r\n                  value={this.state.car.comment}\r\n                  name=\"comment\"\r\n                  onChange={this.changeCar}\r\n                />\r\n              </div>\r\n            </Row>\r\n            <hr />\r\n            <div className=\"row spacer\">\r\n              <div className=\"col-12\">\r\n                <OverlayTrigger\r\n                  key={2}\r\n                  placement={this.tooltipPlace}\r\n                  overlay={<Tooltip id={`tooltip-2`}>Сохранить информацию об автомобиле</Tooltip>}\r\n                >\r\n                  <Button variant=\"primary\" className=\"col\" onClick={this.saveCar}>\r\n                    Сохранить\r\n                  </Button>\r\n                </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}