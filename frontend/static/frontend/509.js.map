{"version":3,"sources":["webpack://frontend/./src/components/Alerts.js","webpack://frontend/./src/components/CarDetail.js"],"names":["Alerts","state","showAlert","timeout","getReactAlerts","array","map","e","index","variant","type","key","message","delay","wait","Promise","resolve","reject","setTimeout","props","then","res","setState","messages","prevProps","prevState","this","prevMessages","length","Component","CarDetail","car","manufacturer","model","production","color","power","mileage","comment","url","tooltipPlace","digitsOnly","charCode","preventDefault","getErrors","data","Object","keys","changeCar","target","name","value","changeDate","date","Date","toLocaleDateString","saveCar","axios","redirect","window","location","href","catch","err","response","getCar","registerLocale","ru","className","onChange","locale","showYearDropdown","maxLength","onKeyPress","as","rows","placement","overlay","id","onClick"],"mappings":"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","file":"509.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert as ReactAlert } from \"react-bootstrap\";\n\nexport default class Alerts extends Component {\n  state = {\n    showAlert: false,\n    timeout: 5000,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let showAlert = false;\n    const { messages } = this.props;\n    const { messages: prevMessages } = prevProps;\n    // console.log(\"messages\", messages);\n    // console.log(\"errors\", errors);\n    // console.log(\"prevMessages\", prevMessages);\n    // console.log(\"prevErrors\", prevErrors);\n\n    if (messages && messages.length > 0 && messages !== prevMessages) {\n      showAlert = true;\n    }\n    // console.log(\"Alerts componentDidUpdate showAlert\", showAlert);\n    // console.log(\n    //   \"Alerts componentDidUpdate prevSate.showAlert\",\n    //   prevState.showAlert\n    // );\n    // console.log(\n    //   \"Alerts componentDidUpdate this.state.showAlert\",\n    //   this.state.showAlert\n    // );\n    if (showAlert && !this.state.showAlert) {\n      this.setState({\n        showAlert,\n      });\n    }\n  }\n\n  getReactAlerts = (array) => {\n    return array ? (\n      array.map((e, index) => {\n        const variant = e.type === \"success\" ? \"primary\" : \"danger\";\n        return (\n          <ReactAlert variant={variant} key={index}>\n            {e.message}\n          </ReactAlert>\n        );\n      })\n    ) : (\n      <></>\n    );\n  };\n\n  delay = (wait) =>\n    new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), wait);\n    });\n\n  showAlert = () => {\n    if (this.state.showAlert) {\n      this.delay(\n        this.props.timeout ? this.props.timeout : this.state.timeout\n      ).then((res) =>\n        this.setState({\n          showAlert: false,\n        })\n      );\n      return <>{this.getReactAlerts(this.props.messages)}</>;\n    }\n    return <div />;\n  };\n\n  render() {\n    return <>{this.showAlert()}</>;\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Row,\n  Form,\n  Button,\n  Tooltip,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\n//import 'react-day-picker/lib/style.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ru from \"date-fns/locale/ru\";\nimport Alerts from \"./Alerts\";\n\nexport default class CarDetail extends Component {\n  state = {\n    messages: [],\n    car: {\n      manufacturer: \"\",\n      model: \"\",\n      production: \"\",\n      color: \"\",\n      power: \"\",\n      mileage: \"\",\n      comment: \"\",\n    },\n  };\n\n  url = \"/testforjob/api/car/\";\n  tooltipPlace = \"bottom\";\n\n  componentDidMount() {\n    registerLocale(\"ru\", ru);\n    this.getCar();\n  }\n\n  digitsOnly = (e) => {\n    let charCode = e.charCode;\n    //console.log(charCode);\n    if (charCode < 48 || charCode > 57) {\n      // digits only\n      e.preventDefault();\n    }\n  };\n\n  getErrors = (data) => {\n    return Object.keys(data).map((key) => {\n      return { type: \"error\", message: data[key] };\n    });\n  };\n\n  changeCar = (e) => {\n    //console.log('changeCar', e);\n\n    const car = {\n      ...this.state.car,\n      [e.target.name]: e.target.value,\n    };\n\n    //console.log('changeCar', car);\n\n    this.setState({ car });\n  };\n\n  changeDate = (date) => {\n    //console.log(\"changeDate date\", date);\n    const dt = new Date(date).toLocaleDateString(\"ru\");\n    //console.log(\"changeDate date\", dt);\n    const car = {\n      ...this.state.car,\n      production: new Date(date).toLocaleDateString(\"ru\"),\n    };\n    //console.log(\"changeDate car\", car);\n\n    this.setState({ car });\n  };\n\n  saveCar = (e) => {\n    axios\n      .post(this.url, { car: this.state.car })\n      .then((res) => {\n        //console.log(\"saveCar\", res.data);\n        if (res.data.redirect) {\n          window.location.href = res.data[\"redirect\"];\n        }\n\n        this.setState({\n          car: res.data,\n          messages: [\n            {\n              type: \"success\",\n              message: \"Информация об автомобиле сохранена\",\n            },\n          ],\n        });\n      })\n      .catch((err) => {\n        //console.log(\"geCarDetail saveCar\", err.response.data);\n        this.setState({\n          messages: this.getErrors(err.response.data),\n        });\n      });\n  };\n\n  getCar = () => {\n    axios\n      .post(this.url, {})\n      .then((res) => {\n        //console.log(\"getCar\", res.data);\n\n        this.setState({ car: res.data });\n      })\n      .catch((err) => {\n        //console.log(\"getCarDetail getCar\", err.response.data);\n        this.setState({\n          messages: this.getErrors(err.response.data),\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Alerts messages={this.state.messages} />\n        <Card>\n          <Card.Title>Автомобиль</Card.Title>\n          <Card.Body>\n            <Row>\n              <div className=\"col-6\">\n                <Row>\n                  <Form.Label className=\"col-5\">Производитель</Form.Label>\n                  <input\n                    className=\"form-control col-6\"\n                    name=\"manufacturer\"\n                    type=\"text\"\n                    value={this.state.car.manufacturer}\n                    onChange={this.changeCar}\n                  />\n                  <Form.Label className=\"col-5\">Модель</Form.Label>\n                  <input\n                    className=\"form-control col-6\"\n                    name=\"model\"\n                    type=\"text\"\n                    value={this.state.car.model}\n                    onChange={this.changeCar}\n                  />\n\n                  <Form.Label className=\"col-5\">Дата выпуска</Form.Label>\n                  {/* <OverlayTrigger\n                    key={1}\n                    placement={this.tooltipPlace}\n                    overlay={<Tooltip id={`tooltip-1`}>Дата выпуска в формате dd.mm.yyy</Tooltip>}\n                  > */}\n                  <DatePicker\n                    className=\"col-11\"\n                    //format=\"dd.MM.yyyy\"\n                    locale=\"ru\"\n                    name=\"production\"\n                    showYearDropdown={true}\n                    onChange={this.changeDate}\n                    value={this.state.car.production}\n                  />\n                  {/* </OverlayTrigger> */}\n                  <Form.Label className=\"col-5\" name=\"color\">\n                    Цвет\n                  </Form.Label>\n                  <input\n                    className=\"form-control col-6\"\n                    name=\"color\"\n                    type=\"text\"\n                    value={this.state.car.color}\n                    onChange={this.changeCar}\n                  />\n                  <Form.Label className=\"col-5\" name=\"age\">\n                    Мощность (л.с.)\n                  </Form.Label>\n                  <input\n                    className=\"form-control col-6\"\n                    name=\"power\"\n                    type=\"text\"\n                    maxLength=\"3\"\n                    value={this.state.car.power ? this.state.car.power : \"\"}\n                    onChange={this.changeCar}\n                    onKeyPress={this.digitsOnly}\n                  />\n                  <Form.Label className=\"col-5\" name=\"age\">\n                    Пробег (км.)\n                  </Form.Label>\n                  <input\n                    className=\"form-control col-6\"\n                    name=\"mileage\"\n                    type=\"text\"\n                    maxLength=\"10\"\n                    value={this.state.car.mileage ? this.state.car.mileage : \"\"}\n                    onChange={this.changeCar}\n                    onKeyPress={this.digitsOnly}\n                  />\n                </Row>\n              </div>\n              <div className=\"col-6\">\n                <Form.Label className=\"col-5\">Комментарий</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"7\"\n                  value={this.state.car.comment}\n                  name=\"comment\"\n                  onChange={this.changeCar}\n                />\n              </div>\n            </Row>\n            <hr />\n            <div className=\"row spacer\">\n              <div className=\"col-12\">\n                <OverlayTrigger\n                  key={2}\n                  placement={this.tooltipPlace}\n                  overlay={\n                    <Tooltip id={`tooltip-2`}>\n                      Сохранить информацию об автомобиле\n                    </Tooltip>\n                  }\n                >\n                  <Button\n                    variant=\"primary\"\n                    className=\"col\"\n                    onClick={this.saveCar}\n                  >\n                    Сохранить\n                  </Button>\n                </OverlayTrigger>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}